import random
from aiogram import Router, types
from aiogram.filters import Command

from client.handlers.settings_client import fetch_bot_settings
from client.handlers.storage import user_data
from client.handlers.language import set_language_and_login, ask_language

router = Router()

EMOJIS = ['üê∂','üê±','üê≠','üêπ','üê∞','ü¶ä','üêª','üêº']

@router.message(Command("start"))
async def cmd_start(message: types.Message):
    chat_id = message.chat.id

    # 1) –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–µ—Å—Å–∏—é
    user_data[chat_id] = {}

    # 2) –¢—è–Ω–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ –ë–î (–±–µ–∑ —Ç–æ–∫–µ–Ω–∞)
    settings = await fetch_bot_settings()
    user_data[chat_id]['settings'] = settings

    # 3) –ï—Å–ª–∏ –Ω—É–∂–Ω–∞ –∫–∞–ø—á–∞ ‚Äí –∑–∞–ø—É—Å—Ç–∏—Ç—å, –∏–Ω–∞—á–µ —Å—Ä–∞–∑—É –Ω–∞ –≤—ã–±–æ—Ä —è–∑—ã–∫–∞
    if settings.get('captcha_enabled'):
        user_data[chat_id]['step'] = 'captcha'
        target = random.choice(EMOJIS)
        user_data[chat_id]['captcha'] = target
        first = random.sample(EMOJIS, 4)
        second = [e for e in EMOJIS if e not in first]
        kb = types.ReplyKeyboardMarkup(
            keyboard=[[types.KeyboardButton(text=e) for e in first],
                      [types.KeyboardButton(text=e) for e in second]],
            resize_keyboard=True,
            one_time_keyboard=True
        )
        await message.answer(f"–î–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –≤—ã–±–µ—Ä–∏—Ç–µ —ç–º–æ–¥–∑–∏ {target}", reply_markup=kb)
    else:
        # –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∫–∞–ø—á—É
        user_data[chat_id]['step'] = 'show_language_keyboard'
        await ask_language(message)

@router.message(lambda msg: user_data.get(msg.chat.id, {}).get('step') == 'captcha')
async def check_captcha(message: types.Message):
    chat_id = message.chat.id
    data    = user_data[chat_id]

    if message.text == data['captcha']:
        # –ü—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ç–≥–∞–¥–∞–ª
        # –£–±–µ—Ä—ë–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∫–∞–ø—á–∏ –∏ –ø–µ—Ä–µ–π–¥—ë–º –∫ —è–∑—ã–∫—É
        data['step'] = 'show_language_keyboard'
        await message.answer(
            "–û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫.",
            reply_markup=types.ReplyKeyboardRemove()
        )
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —è–∑—ã–∫–æ–≤:
        from client.handlers.language import ask_language
        await ask_language(message)
    else:
        await message.answer("–ù–µ–≤–µ—Ä–Ω–æ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.")
